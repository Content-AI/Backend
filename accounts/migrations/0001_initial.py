# Generated by Django 4.2.2 on 2023-06-20 17:11

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('first_name', models.CharField(max_length=10, validators=[accounts.models.validate_first_name])),
                ('last_name', models.CharField(max_length=10, validators=[accounts.models.validate_last_name])),
                ('startDate', models.DateField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'active'), ('inactive', 'inactive'), ('working', 'working'), ('disable', 'disable')], default='active', max_length=10, null=True)),
                ('three_steps', models.BooleanField(default=True)),
                ('profile_pic', models.ImageField(blank=True, help_text='Maximum file size allowed is 5MB', null=True, upload_to='images/', validators=[accounts.models.validate_image])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
